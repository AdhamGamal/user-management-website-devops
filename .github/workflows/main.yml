name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build_backend:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    env:
      BACKEND_IMAGE: 'adhamgamal22/add-user-backend:1.0'
    steps:
      - name: Step 1 - Checkout Code
        uses: actions/checkout@v4
        
      - name: Step 2 - Install Dependencies & Build Backend
        run: |
          cd backend
          npm install
          echo "✅ Backend setup completed."

      - name: Step 3 - Build Backend Docker Image
        run: |
          docker build -t $BACKEND_IMAGE -f devops/Dockerfile.backend .
          echo "✅ Backend Docker image built."

      - name: Step 4 - Push Backend Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $BACKEND_IMAGE
          echo "✅ Backend image pushed to Docker Hub."

  build_frontend:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    env:
      FRONTEND_IMAGE: 'adhamgamal22/add-user-frontend:1.0'
    steps:
      - name: Step 1 - Checkout Code
        uses: actions/checkout@v4
        
      - name: Step 2 - Install Dependencies & Build Frontend
        run: |
          cd frontend
          npm install
          npm run build
          echo "✅ Frontend build completed."

      - name: Step 3 - Build Frontend Docker Image
        run: |
          docker build -t $FRONTEND_IMAGE -f devops/Dockerfile.frontend .
          echo "✅ Frontend Docker image built."

      - name: Step 4 - Push Frontend Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $FRONTEND_IMAGE
          echo "✅ Frontend image pushed to Docker Hub."

  setup_deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    steps:
      - name: Step 1 - Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          echo "✅ Ansible installed."

  deploy:
    needs: [build_backend, build_frontend, setup_deploy]  # Ensure this job runs after the others
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    env:
      DROPLET_IP: '207.154.204.90'

    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DROPLET_IP }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo 'Running Ansible playbook...'
            ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i devops/inventory.ini devops/deploy.yml
  